name: CI/CD Deploy to GCP

on:
  push:
    branches:
      - master  # Ganti 'main' sesuai dengan nama default branch repo kamu

env:
  GCP_PROJECT_ID: sodium-burner-466106-g3

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}

    - name: Configure Docker to use Artifact Registry
      run: |
        gcloud auth configure-docker asia-southeast2-docker.pkg.dev

    # Build & Push Auth Service
    - name: Build & Push auth-service image
      run: |
        docker buildx build --platform linux/amd64 \
          -t asia-southeast2-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/mercari-repo/auth-service:latest \
          ./auth-service --push

    # Build & Push Cart Service
    - name: Build & Push cart image
      run: |
        docker buildx build --platform linux/amd64 \
          -t asia-southeast2-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/mercari-repo/cart:latest \
          ./cart --push

    # Build & Push Product Service
    - name: Build & Push product image
      run: |
        docker buildx build --platform linux/amd64 \
          -t asia-southeast2-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/mercari-repo/product:latest \
          ./product --push

    # Build & Push Gateway Service
    - name: Build & Push gateway-service image
      run: |
        docker buildx build --platform linux/amd64 \
          -t asia-southeast2-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/mercari-repo/gateway-service:latest \
          ./gateway-service --push

    # SSH to VM and Deploy
    - name: Deploy on VM via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        port: 22
        script: |
          set -e

          echo "✅ SSH: Logged in to VM"

          # Clone or update repository
          if [ ! -d ~/mercari ]; then
            echo "📥 Cloning repo..."
            git clone https://github.com/${{ github.repository }} ~/mercari
          else
            echo "🔄 Updating repo..."
            cd ~/mercari && git pull origin main
          fi

          cd ~/deploy

          # Check if docker-compose.yml exists
          if [ ! -f docker-compose.yml ]; then
            echo "❌ ERROR: docker-compose.yml not found!"
            exit 1
          fi

          # Install docker-compose if not available
          if ! command -v docker-compose &> /dev/null; then
            echo "📦 Installing docker-compose..."
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          # Create .env file if it doesn't exist
          if [ ! -f .env ]; then
            echo "⚙️ Creating .env file..."
            cat > .env << EOF
          DB_USER=postgres
          DB_PASS=didit051211
          AUTH_DB_NAME=authdb
          CART_DB_NAME=cartdb
          PRODUCT_DB_NAME=productdb
          DB_HOST=34.101.70.101
          DB_PORT=5432
          DB_DIALECT=postgres
          JWT_SECRET=mysecretkey
          
          EOF
          fi

          echo "📦 Pulling latest Docker images..."
          docker-compose pull || exit 1

          echo "🚀 Starting containers..."
          docker-compose up -d --remove-orphans || exit 1

          echo "✅ Deployment complete."